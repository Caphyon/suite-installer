#pragma once
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           8.0.280224.1+42b1fb4fd6
//
//       Command:
//           LottieGen -GenerateColorBindings -Language Cppwinrt -Namespace SuiteInstaller
//           -WinUIVersion 3.0 -InputFile homeIcon.json
//
//       Input file:
//           homeIcon.json (10020 bytes created 12:05+02:00 Nov 22 2024)
//
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#include "HomeIcon.g.h"

namespace winrt::SuiteInstaller
{
// Name:        HomeIcon_sameColor
// Frame rate:  30 fps
// Frame count: 61
// Duration:    2033.3 mS
// _____________________________________________________________________________________
// |         Marker         |         Constant         | Frame |   mS   |   Progress   |
// |________________________|__________________________|_______|________|______________|
// | NormalToSelected_Start | M_NormalToSelected_Start |     0 |    0.0 | 0.0F         |
// | NormalToSelected_End   | M_NormalToSelected_End   |    30 | 1000.0 | 0.492622942F |
// | SelectedToNormal_Start | M_SelectedToNormal_Start |    38 | 1266.7 | 0.623770475F |
// | SelectedToNormal_End   | M_SelectedToNormal_End   |    61 | 2033.3 | 1.0F         |
// -------------------------------------------------------------------------------------
// __________________________________________________________
// | Theme property |   Accessor   | Type  | Default value  |
// |________________|______________|_______|________________|
// | #0000FF        | Foreground | Color | #FF0000FF Blue |
// | #FF0000        | AccentColor | Color | #FFFF0000 Red  |
// ----------------------------------------------------------
namespace implementation
{
class HomeIcon : public HomeIconT<HomeIcon>
{
  winrt::Microsoft::UI::Composition::CompositionPropertySet _themeProperties{ nullptr };
  winrt::Windows::UI::Color _themeForeground{ 0xFF, 0x00, 0x00, 0xFF };
  winrt::Windows::UI::Color _themeAccentColor{ 0xFF, 0xFF, 0x00, 0x00 };
  winrt::Microsoft::UI::Composition::CompositionPropertySet EnsureThemeProperties(
    winrt::Microsoft::UI::Composition::Compositor compositor);

  static winrt::Windows::Foundation::Numerics::float4 ColorAsVector4(
    winrt::Windows::UI::Color color);

public:
  static void OnMirroredWhenRightToLeftPropertyChanged(
    Microsoft::UI::Xaml::DependencyObject const &                   sender,
    Microsoft::UI::Xaml::DependencyPropertyChangedEventArgs const & args)
  {
    auto owner = sender.as<HomeIcon>();
    owner;
    args;
    // winrt::get_self<AnimatedIcon>(owner)->OnMirroredWhenRightToLeftPropertyChanged(args);
  }

  // Animation duration: 2.033 seconds.
  static constexpr int64_t c_durationTicks{ 20333333L };

  // Marker: NormalToSelected_Start.
  static constexpr float M_NormalToSelected_Start{ 0.0F };

  // Marker: NormalToSelected_End.
  static constexpr float M_NormalToSelected_End{ 0.492622942F };

  // Marker: SelectedToNormal_Start.
  static constexpr float M_SelectedToNormal_Start{ 0.623770475F };

  // Marker: SelectedToNormal_End.
  static constexpr float M_SelectedToNormal_End{ 1.0F };

  // Theme property: Foreground.
  static inline const winrt::Windows::UI::Color c_themeForeground{ 0xFF, 0x00, 0x00, 0xFF };

  // Theme property: AccentColor.
  static inline const winrt::Windows::UI::Color c_themeAccentColor{ 0xFF, 0xFF, 0x00, 0x00 };

  winrt::Windows::UI::Color Foreground();
  void                      Foreground(winrt::Windows::UI::Color value);

  winrt::Windows::UI::Color AccentColor();
  void                      AccentColor(winrt::Windows::UI::Color value);

  winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual TryCreateAnimatedVisual(
    winrt::Microsoft::UI::Composition::Compositor const & compositor);

  winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual TryCreateAnimatedVisual(
    winrt::Microsoft::UI::Composition::Compositor const & compositor,
    winrt::Windows::Foundation::IInspectable &            diagnostics);

  // Gets the number of frames in the animation.
  double FrameCount();

  // Gets the framerate of the animation.
  double Framerate();

  // Gets the duration of the animation.
  winrt::Windows::Foundation::TimeSpan Duration();

  // Converts a zero-based frame number to the corresponding progress value denoting the
  // start of the frame.
  double FrameToProgress(double frameNumber);

  // Returns a map from marker names to corresponding progress values.
  winrt::Windows::Foundation::Collections::IMapView<hstring, double> Markers();

  // Sets the color property with the given name, or does nothing if no such property
  // exists.
  void SetColorProperty(hstring const & propertyName, winrt::Windows::UI::Color value);

  // Sets the scalar property with the given name, or does nothing if no such property
  // exists.
  void SetScalarProperty(hstring const & propertyName, double value);
};
}  // namespace implementation

namespace factory_implementation
{
struct HomeIcon : HomeIconT<HomeIcon, implementation::HomeIcon>
{
};
}  // namespace factory_implementation
}  // namespace winrt::SuiteInstaller
